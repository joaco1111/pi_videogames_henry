{"ast":null,"code":"const initialState = {\n  allVideogames: [],\n  videogames: [],\n  videogame: [],\n  genres: [],\n  platforms: []\n};\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_ALL_VIDEOGAMES:\n      //para mi home\n      return {\n        ...state,\n        allVideogames: action.payload,\n        videogames: action.payload //de reserva\n      };\n\n    case GET_NAMES:\n      //para mi searchbar\n      return {\n        ...state,\n        allVideogames: action.payload\n      };\n    case GET_VIDEOGAME:\n      //para mi ruta de detalle\n      return {\n        ...state,\n        videogame: action.payload\n      };\n    case GET_BY_GENRES:\n      return {\n        ...state,\n        genres: action.payload\n      };\n    case CREATE_VIDEOGAME:\n      return {\n        ...state\n      };\n    case ORDER_BY:\n      let vgCopy = [...state.allVideogames]; //hago una copia de mi estado importante\n      let ordenamiento;\n      switch (action.payload) {\n        case 'All':\n          ordenamiento = [...state.allVideogames];\n          break;\n        case 'A-Z':\n          ordenamiento = vgCopy.sort(function (a, b) {\n            if (a.name.toLowerCase() > b.name.toLowerCase()) {\n              return 1;\n            }\n            if (a.name.toLowerCase() < b.name.toLowerCase()) {\n              return -1;\n            }\n            return 0;\n          });\n          break;\n        case 'Z-A':\n          ordenamiento = vgCopy.sort(function (a, b) {\n            if (a.name.toLowerCase() < b.name.toLowerCase()) {\n              return 1;\n            }\n            if (a.name.toLowerCase() > b.name.toLowerCase()) {\n              return -1;\n            }\n            return 0;\n          });\n          break;\n        case 'RatingAsc':\n          ordenamiento = vgCopy.sort(function (a, b) {\n            return a.rating - b.rating;\n          });\n          break;\n        case 'RatingDesc':\n          ordenamiento = vgCopy.sort(function (a, b) {\n            return b.rating - a.rating;\n          });\n          break;\n        default:\n          ordenamiento = vgCopy;\n          break;\n      }\n      return {\n        ...state,\n        allVideogames: ordenamiento,\n        videogames: ordenamiento\n      };\n    case FILTER_BY_GENRES:\n      let aux = [];\n      if (action.payload) {\n        aux = state.videogames.filter(e => {\n          if (e.genres.length === 0) {\n            return e.genres;\n          } else if (e.genres.some(e => e.name === action.payload)) {\n            return e.genres.map(el => el.name);\n          } else {\n            return e.genres.includes(action.payload);\n          }\n        });\n      } else {\n        aux = state.videogames;\n      }\n      return {\n        ...state,\n        allVideogames: aux\n      };\n    case FILTER_BY_SOURCE:\n      let getVg = state.videogames;\n      let filtrado = [];\n      switch (action.payload) {\n        case 'api':\n          filtrado = getVg.filter(el => typeof el.id === 'number');\n          break;\n        case 'created':\n          filtrado = getVg.filter(el => isNaN(el.id));\n          break;\n        default:\n          filtrado = getVg;\n          break;\n      }\n      return {\n        ...state,\n        allVideogames: filtrado\n      };\n    case GET_PLATFORMS:\n      return {\n        ...state,\n        platforms: [...action.payload]\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n}\nexport default rootReducer;","map":{"version":3,"names":["initialState","allVideogames","videogames","videogame","genres","platforms","rootReducer","state","action","type","GET_ALL_VIDEOGAMES","payload","GET_NAMES","GET_VIDEOGAME","GET_BY_GENRES","CREATE_VIDEOGAME","ORDER_BY","vgCopy","ordenamiento","sort","a","b","name","toLowerCase","rating","FILTER_BY_GENRES","aux","filter","e","length","some","map","el","includes","FILTER_BY_SOURCE","getVg","filtrado","id","isNaN","GET_PLATFORMS"],"sources":["C:/Users/joaco/OneDrive/Escritorio/pi_videogames.henry/pi_videogames_henry/client/src/redux/reducer/index.js"],"sourcesContent":["\r\n\r\nconst initialState = {\r\n    allVideogames : [],\r\n    videogames : [],\r\n    videogame: [],\r\n    genres: [],\r\n    platforms: []\r\n}\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ALL_VIDEOGAMES: //para mi home\r\n            return {\r\n                ...state,\r\n                allVideogames: action.payload,\r\n                videogames: action.payload //de reserva\r\n            };\r\n        case GET_NAMES: //para mi searchbar\r\n            return {\r\n                ...state,\r\n                allVideogames: action.payload\r\n            };\r\n        case GET_VIDEOGAME: //para mi ruta de detalle\r\n            return {\r\n                ...state,\r\n                videogame: action.payload\r\n            };\r\n        case GET_BY_GENRES:\r\n            return {\r\n                ...state,\r\n                genres: action.payload\r\n            };\r\n        case CREATE_VIDEOGAME:\r\n            return {\r\n                ...state\r\n            }\r\n        case ORDER_BY:\r\n            let vgCopy = [...state.allVideogames]; //hago una copia de mi estado importante\r\n            let ordenamiento\r\n\r\n            switch (action.payload) {\r\n                case 'All':\r\n                    ordenamiento = [...state.allVideogames];\r\n                    break;\r\n                case 'A-Z':\r\n                    ordenamiento = vgCopy.sort(function(a, b) {\r\n                        if (a.name.toLowerCase() > b.name.toLowerCase()) {\r\n                            return 1\r\n                        }\r\n                        if (a.name.toLowerCase() < b.name.toLowerCase()) {\r\n                            return -1\r\n                        }\r\n                        return 0;\r\n                    });\r\n                    break;\r\n                case 'Z-A':\r\n                    ordenamiento = vgCopy.sort(function(a, b) {\r\n                        if(a.name.toLowerCase() < b.name.toLowerCase()) {\r\n                            return 1;\r\n                          }\r\n                          if (a.name.toLowerCase() > b.name.toLowerCase()) {\r\n                            return -1;\r\n                          }\r\n                          return 0;\r\n                    })\r\n                    break;\r\n                case 'RatingAsc':\r\n                    ordenamiento = vgCopy.sort(function(a, b) {\r\n                        return a.rating - b.rating\r\n                    })\r\n                    break;\r\n                case 'RatingDesc':\r\n                    ordenamiento = vgCopy.sort(function(a, b) {\r\n                        return b.rating - a.rating\r\n                    })\r\n                    break;\r\n                default:\r\n                    ordenamiento = vgCopy\r\n                    break;\r\n            }\r\n            return {\r\n                ...state,\r\n                allVideogames: ordenamiento,\r\n                videogames : ordenamiento\r\n            };\r\n        case FILTER_BY_GENRES:\r\n            let aux = [];\r\n            if(action.payload) {\r\n                aux = state.videogames.filter(e => {\r\n                    if(e.genres.length === 0){\r\n                        return e.genres\r\n                    }\r\n                    else if(e.genres.some(e => e.name === action.payload)) {\r\n                        return e.genres.map(el => el.name)\r\n                    } else {\r\n                        return e.genres.includes(action.payload)\r\n                    }\r\n                })\r\n            } else {\r\n                aux = state.videogames\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                allVideogames: aux,\r\n            }\r\n            case FILTER_BY_SOURCE:\r\n                let getVg = state.videogames;\r\n                let filtrado = []\r\n    \r\n                switch(action.payload) {\r\n                    case 'api': filtrado = getVg.filter(el => typeof (el.id) === 'number'); break;\r\n                    case 'created': filtrado = getVg.filter(el => isNaN(el.id)); break;\r\n                    default: filtrado = getVg; break;\r\n                }\r\n                return {\r\n                    ...state,\r\n                    allVideogames: filtrado\r\n                };\r\n        case GET_PLATFORMS:\r\n            return {\r\n                ...state,\r\n                platforms: [...action.payload]\r\n            }\r\n        default:\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n}\r\n\r\nexport default rootReducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}