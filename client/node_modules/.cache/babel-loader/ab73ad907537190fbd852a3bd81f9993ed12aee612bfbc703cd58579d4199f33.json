{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joaco\\\\OneDrive\\\\Escritorio\\\\pi_videogames.henry\\\\pi_videogames_henry\\\\client\\\\src\\\\components\\\\Create.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Create = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = Create;\nexport default Create;\n\n// import React from \"react\";\n// import { useEffect } from \"react\";\n// import { useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// //import { createVideogame, getByGenres, getPlatforms } from \"../redux/actions\";\n// import s from '../style/Create.module.css'\n// import { NavLink } from \"react-router-dom\";\n// import { useNavigate } from 'react-router-dom'\n\n// function validate (input) {\n//   let errors = {}\n\n//   if(!input.name) {\n//     errors.name = 'El nombre es requerido'\n//   } else if(!/^[a-zA-Z0-9-() .]+$/.test(input.name)){\n//     errors.name = 'Solo se aceptan letras, numeros, guiones medios y parentesis'\n//   }\n\n//   if(input.image.length !== 0 && !/^(https?|chrome):\\/\\/[^\\s$.?#].[^\\s]*$/.test(input.image)){\n//     errors.image='invalid URL'\n//   }\n\n//   if(!input.description) {\n//     errors.description = 'La descripcion es requerida'\n//   } else if (input.description.length > 100) {\n//     errors.description = 'La descripcion es muy larga. (Max = 100 caracteres)'\n//   }\n\n//   if(!input.released) {\n//     errors.released = 'La fecha de lanzamiento es requerida'\n//   }\n\n//   if(!input.rating) {\n//     errors.rating = 'El rating es requerido'\n//   } else if(input.rating > 5) {\n//     errors.rating = 'El rating no debe ser mayor a 5'\n//   } else if(input.rating < 0) {\n//     errors.rating = 'El rating no puede ser un numero negativo'\n//   }\n\n//   return errors //la funcion validate devuelve el objeto errors, ya sea vacio o con alguna propiedad si es q encuentra un error\n// }\n\n// export default function Create() {\n//   const [input, setInput] = useState({\n//     name: \"\",\n//     image: \"\",\n//     description: \"\",\n//     released: \"\",\n//     rating: \"\",\n//     genres: [],\n//     platforms: []\n//   });\n\n//   const [errors, setErrors] = useState({}); //me creo un estado local, en donde errors = {}\n\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n\n//   const generos = useSelector((state) => state.genres);\n//   const plataformas = useSelector(state => state.platforms);\n//   const allNames = useSelector(state => state.allVideogames)\n\n//   function handleSubmit(e) {\n//     e.preventDefault();\n//     let noRepeat = allNames.filter(n => n.name === input.name)\n//     if(noRepeat.length !== 0) {\n//       alert('Ya existe un juego con ese nombre, por favor elija otro')\n//     } else {\n//         let error = Object.keys(validate(input)) // Object.keys(errors) --> errors = {} => devuelve un array de strings q representa todas las propiedades del objeto\n//         //solo habra propiedades si es que HAY ALGUN ERROR\n//         if(error.length !== 0 || !input.genres.length || !input.platforms.length) { //Entonces si hay algun error, error va a ser un array con la propiedad en donde haya un error, osea que su length !== 0\n//           alert('Llene los campos correctamente')\n//           return\n//         } else {\n//           setInput({\n//             name: \"\",\n//             image: \"\",\n//             description: \"\",\n//             released: \"\",\n//             rating: \"\",\n//             genres: [],\n//             platforms: [],\n//           });\n//           alert(\"Felicidades, el juego fue creado exitosamente.\");\n//         }\n//         navigate('/home')\n\n//     }\n//   }\n\n//   function handleChange(e) {\n//     e.preventDefault();\n//     setInput((prev) => ({ ...prev, [e.target.name]: e.target.value }));\n//     setErrors(validate({\n//       ...input,\n//       [e.target.name]: [e.target.value]\n//     })\n//     )\n//     //console.log(errors)\n//   }\n\n//   function handleGenres(e) {\n//     if(!input.genres.includes(e.target.value)) {\n//       setInput({\n//         ...input,\n//         genres: [...input.genres, e.target.value],\n//       })\n//     }\n//   }\n\n//   function handlePlatforms(e) {\n//     if(!input.platforms.includes(e.target.value)) {\n//       setInput({\n//         ...input,\n//         platforms: [...input.platforms, e.target.value]\n//       })\n//     }\n//   }\n\n//   function handleDeleteG(e) {\n//     setInput({\n//       ...input,\n//       genres: input.genres.filter((gen) => gen !== e)\n//     });\n//   }\n\n//   function handleDeleteP(e) {\n//     setInput({\n//       ...input,\n//       platforms: input.platforms.filter((plat) => plat !== e)\n//     });\n//   }\n\n//   return (\n//     <div>\n//       <form onSubmit={(e) => handleSubmit(e)} className={s.box_form}>\n//         <div className={s.form}>\n//           <h2 className={s.titulo}>CREA TU PROPIO VIDEOJUEGO</h2>\n\n//           <div className={s.grupo}>\n//             <input\n//               className={s.create_input}\n//               type=\"text\"\n//               required\n//               name=\"name\"\n//               value={input.name}\n//               onChange={(e) => handleChange(e)}\n//               /> <span className={s.barra}></span>\n//             <label className={s.label}>Nombre: </label>\n//             {errors.name && (\n//               <p className={s.danger}>{errors.name}</p>\n//             )}\n//           </div>\n\n//           <div className={s.grupo}>\n//             <input\n//             className={s.create_input}\n//               type=\"text\"\n//               name=\"image\"\n//               value={input.image}\n//               onChange={(e) => handleChange(e)}\n//               /> <span className={s.barra}></span>\n//             <label className={s.label}>Imagen URL: </label>\n//             {errors.image && (\n//               <p className={s.danger}>{errors.image}</p>\n//             )}\n//           </div>\n\n//           <div className={s.grupo}>\n//             <input\n//             className={s.create_input}\n//               required\n//               type='date'\n//               name=\"released\"\n//               value={input.released}\n//               placeholder='yyyy-mm-dd'\n//               onChange={(e) => handleChange(e)}\n//               /> <span className={s.barra}></span>\n//             <label className={s.label}>Fecha de lanzamiento: </label>\n//             {errors.released && (\n//               <p className={s.danger}>{errors.released}</p>\n//             )}\n\n//           </div>\n\n//           <div className={s.grupo}>\n//             <input\n//             className={s.create_input}\n//               required\n//               type=\"number\"\n//               name=\"rating\"\n//               value={input.rating}\n//               onChange={(e) => handleChange(e)}\n//               /> <span className={s.barra}></span>\n//             <label className={s.label}>Rating: </label>\n//             {errors.rating && (\n//               <p className={s.danger}>{errors.rating}</p>\n//             )}\n//           </div>\n\n//           <div className={s.grupo}>\n//             <select className={s.select_create} id=\"genres\" defaultValue=\"\" onChange={(e) => handleGenres(e)}>\n//               <option className={s.option_create} value='' disabled hidden>Elija los g√©neros...</option>\n//               {generos.map((g) => {\n//                 return (\n//                   <option className={s.option_create} key={g.id} value={g.name}>{g.name}</option>\n//                   );\n//                 })}\n//             </select> <span className={s.barra}></span>\n//             <label className={s.label}>Generos: </label>\n//             {input.genres.map((g) => (\n//               <div className={s.box_opcion}>\n//                 <div className={s.opcion_title}>{g}</div>\n//                 <button className={s.btn_remove} onClick={() => handleDeleteG(g)} key={g} value={g}><span className={s.x}>X</span></button>\n//               </div>\n//         ))}\n//           </div>\n\n//           <div className={s.grupo}>\n//               <select className={s.select_create} id=\"platforms\" defaultValue=\"\" onChange={(e) => handlePlatforms(e)}>\n//                   <option className={s.option_create} value=\"\" disabled hidden>Elija las plataformas...</option>\n//                   {plataformas?.map(p => {\n//                     return (\n//                       <option className={s.option_create} value={p} key={p}>{p}</option>\n//                       );\n//                     })}\n//               </select> <span className={s.barra}></span>\n//               <label className={s.label}>Plataformas:  </label>\n//               {input.platforms.map((p) => (\n//                 <div className={s.box_opcion}>\n//                   <div className={s.opcion_title}>{p}</div>\n//                   <button className={s.btn_remove} onClick={() => handleDeleteP(p)} key={p} value={p}><span className={s.x}>X</span></button>\n//                 </div>\n//               ))}\n//           </div>\n\n//           <div className={s.grupo}>\n//             <textarea\n//               required\n//               type=\"text\"\n//               name=\"description\"\n//               value={input.description}\n//               onChange={(e) => handleChange(e)}\n//               > </textarea>\n//             <label className={s.description}>Descripcion: </label>\n//             {errors.description && (\n//               <p className={s.danger}>{errors.description}</p>\n//             )}\n//           </div>\n//       </div>\n//       <div>\n//           <button type=\"submit\" className={s.btn_submit}>CREAR VIDEOJUEGO</button>\n//       </div>\n//       <div className={s.box_home}>\n//           <NavLink to={'/home'} className={s.back_home}>Cancelar</NavLink>\n//       </div>\n//       </form>\n\n//     </div>\n//   );\n// };\n// export {Create};\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Create","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/joaco/OneDrive/Escritorio/pi_videogames.henry/pi_videogames_henry/client/src/components/Create.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst Create = () => {\r\n  return (\r\n    <div>\r\n      <h1>Create Page</h1>\r\n      {/* Your content for the Create component */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from \"react\";\r\n// import { useEffect } from \"react\";\r\n// import { useState } from \"react\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// //import { createVideogame, getByGenres, getPlatforms } from \"../redux/actions\";\r\n// import s from '../style/Create.module.css'\r\n// import { NavLink } from \"react-router-dom\";\r\n// import { useNavigate } from 'react-router-dom'\r\n\r\n// function validate (input) {\r\n//   let errors = {}\r\n\r\n//   if(!input.name) {\r\n//     errors.name = 'El nombre es requerido'\r\n//   } else if(!/^[a-zA-Z0-9-() .]+$/.test(input.name)){\r\n//     errors.name = 'Solo se aceptan letras, numeros, guiones medios y parentesis'\r\n//   }\r\n\r\n//   if(input.image.length !== 0 && !/^(https?|chrome):\\/\\/[^\\s$.?#].[^\\s]*$/.test(input.image)){\r\n//     errors.image='invalid URL'\r\n//   }\r\n\r\n//   if(!input.description) {\r\n//     errors.description = 'La descripcion es requerida'\r\n//   } else if (input.description.length > 100) {\r\n//     errors.description = 'La descripcion es muy larga. (Max = 100 caracteres)'\r\n//   }\r\n\r\n//   if(!input.released) {\r\n//     errors.released = 'La fecha de lanzamiento es requerida'\r\n//   }\r\n\r\n//   if(!input.rating) {\r\n//     errors.rating = 'El rating es requerido'\r\n//   } else if(input.rating > 5) {\r\n//     errors.rating = 'El rating no debe ser mayor a 5'\r\n//   } else if(input.rating < 0) {\r\n//     errors.rating = 'El rating no puede ser un numero negativo'\r\n//   }\r\n\r\n//   return errors //la funcion validate devuelve el objeto errors, ya sea vacio o con alguna propiedad si es q encuentra un error\r\n// }\r\n\r\n// export default function Create() {\r\n//   const [input, setInput] = useState({\r\n//     name: \"\",\r\n//     image: \"\",\r\n//     description: \"\",\r\n//     released: \"\",\r\n//     rating: \"\",\r\n//     genres: [],\r\n//     platforms: []\r\n//   });\r\n\r\n//   const [errors, setErrors] = useState({}); //me creo un estado local, en donde errors = {}\r\n  \r\n//   const dispatch = useDispatch();\r\n//   const navigate = useNavigate();\r\n\r\n//   const generos = useSelector((state) => state.genres);\r\n//   const plataformas = useSelector(state => state.platforms);\r\n//   const allNames = useSelector(state => state.allVideogames)\r\n\r\n  \r\n  \r\n//   function handleSubmit(e) {\r\n//     e.preventDefault();\r\n//     let noRepeat = allNames.filter(n => n.name === input.name)\r\n//     if(noRepeat.length !== 0) {\r\n//       alert('Ya existe un juego con ese nombre, por favor elija otro')\r\n//     } else {\r\n//         let error = Object.keys(validate(input)) // Object.keys(errors) --> errors = {} => devuelve un array de strings q representa todas las propiedades del objeto\r\n//         //solo habra propiedades si es que HAY ALGUN ERROR\r\n//         if(error.length !== 0 || !input.genres.length || !input.platforms.length) { //Entonces si hay algun error, error va a ser un array con la propiedad en donde haya un error, osea que su length !== 0\r\n//           alert('Llene los campos correctamente')\r\n//           return\r\n//         } else {\r\n//           setInput({\r\n//             name: \"\",\r\n//             image: \"\",\r\n//             description: \"\",\r\n//             released: \"\",\r\n//             rating: \"\",\r\n//             genres: [],\r\n//             platforms: [],\r\n//           });\r\n//           alert(\"Felicidades, el juego fue creado exitosamente.\");\r\n//         }\r\n//         navigate('/home')\r\n\r\n//     }\r\n//   }\r\n\r\n//   function handleChange(e) {\r\n//     e.preventDefault();\r\n//     setInput((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n//     setErrors(validate({\r\n//       ...input,\r\n//       [e.target.name]: [e.target.value]\r\n//     })\r\n//     )\r\n//     //console.log(errors)\r\n//   }\r\n\r\n//   function handleGenres(e) {\r\n//     if(!input.genres.includes(e.target.value)) {\r\n//       setInput({\r\n//         ...input,\r\n//         genres: [...input.genres, e.target.value],\r\n//       })\r\n//     }\r\n//   }\r\n\r\n//   function handlePlatforms(e) {\r\n//     if(!input.platforms.includes(e.target.value)) {\r\n//       setInput({\r\n//         ...input,\r\n//         platforms: [...input.platforms, e.target.value]\r\n//       })\r\n//     }\r\n//   }\r\n\r\n//   function handleDeleteG(e) {\r\n//     setInput({\r\n//       ...input,\r\n//       genres: input.genres.filter((gen) => gen !== e)\r\n//     });\r\n//   }\r\n\r\n//   function handleDeleteP(e) {\r\n//     setInput({\r\n//       ...input,\r\n//       platforms: input.platforms.filter((plat) => plat !== e)\r\n//     });\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <form onSubmit={(e) => handleSubmit(e)} className={s.box_form}>\r\n//         <div className={s.form}>\r\n//           <h2 className={s.titulo}>CREA TU PROPIO VIDEOJUEGO</h2>\r\n\r\n//           <div className={s.grupo}>\r\n//             <input\r\n//               className={s.create_input}\r\n//               type=\"text\"\r\n//               required\r\n//               name=\"name\"\r\n//               value={input.name}\r\n//               onChange={(e) => handleChange(e)}\r\n//               /> <span className={s.barra}></span>\r\n//             <label className={s.label}>Nombre: </label>\r\n//             {errors.name && (\r\n//               <p className={s.danger}>{errors.name}</p>\r\n//             )}\r\n//           </div>\r\n\r\n\r\n//           <div className={s.grupo}>\r\n//             <input\r\n//             className={s.create_input}\r\n//               type=\"text\"\r\n//               name=\"image\"\r\n//               value={input.image}\r\n//               onChange={(e) => handleChange(e)}\r\n//               /> <span className={s.barra}></span>\r\n//             <label className={s.label}>Imagen URL: </label>\r\n//             {errors.image && (\r\n//               <p className={s.danger}>{errors.image}</p>\r\n//             )}\r\n//           </div>\r\n\r\n\r\n//           <div className={s.grupo}>\r\n//             <input\r\n//             className={s.create_input}\r\n//               required\r\n//               type='date'\r\n//               name=\"released\"\r\n//               value={input.released}\r\n//               placeholder='yyyy-mm-dd'\r\n//               onChange={(e) => handleChange(e)}\r\n//               /> <span className={s.barra}></span>\r\n//             <label className={s.label}>Fecha de lanzamiento: </label>\r\n//             {errors.released && (\r\n//               <p className={s.danger}>{errors.released}</p>\r\n//             )}\r\n\r\n//           </div>\r\n\r\n//           <div className={s.grupo}>\r\n//             <input\r\n//             className={s.create_input}\r\n//               required\r\n//               type=\"number\"\r\n//               name=\"rating\"\r\n//               value={input.rating}\r\n//               onChange={(e) => handleChange(e)}\r\n//               /> <span className={s.barra}></span>\r\n//             <label className={s.label}>Rating: </label>\r\n//             {errors.rating && (\r\n//               <p className={s.danger}>{errors.rating}</p>\r\n//             )}\r\n//           </div>\r\n\r\n\r\n//           <div className={s.grupo}>\r\n//             <select className={s.select_create} id=\"genres\" defaultValue=\"\" onChange={(e) => handleGenres(e)}>\r\n//               <option className={s.option_create} value='' disabled hidden>Elija los g√©neros...</option>\r\n//               {generos.map((g) => {\r\n//                 return (\r\n//                   <option className={s.option_create} key={g.id} value={g.name}>{g.name}</option>\r\n//                   );\r\n//                 })}\r\n//             </select> <span className={s.barra}></span>\r\n//             <label className={s.label}>Generos: </label>\r\n//             {input.genres.map((g) => (\r\n//               <div className={s.box_opcion}>\r\n//                 <div className={s.opcion_title}>{g}</div>\r\n//                 <button className={s.btn_remove} onClick={() => handleDeleteG(g)} key={g} value={g}><span className={s.x}>X</span></button>\r\n//               </div>\r\n//         ))}\r\n//           </div>\r\n\r\n\r\n//           <div className={s.grupo}>\r\n//               <select className={s.select_create} id=\"platforms\" defaultValue=\"\" onChange={(e) => handlePlatforms(e)}>\r\n//                   <option className={s.option_create} value=\"\" disabled hidden>Elija las plataformas...</option>\r\n//                   {plataformas?.map(p => {\r\n//                     return (\r\n//                       <option className={s.option_create} value={p} key={p}>{p}</option>\r\n//                       );\r\n//                     })}\r\n//               </select> <span className={s.barra}></span>\r\n//               <label className={s.label}>Plataformas:  </label>\r\n//               {input.platforms.map((p) => (\r\n//                 <div className={s.box_opcion}>\r\n//                   <div className={s.opcion_title}>{p}</div>\r\n//                   <button className={s.btn_remove} onClick={() => handleDeleteP(p)} key={p} value={p}><span className={s.x}>X</span></button>\r\n//                 </div>\r\n//               ))}\r\n//           </div>\r\n\r\n//           <div className={s.grupo}>\r\n//             <textarea\r\n//               required\r\n//               type=\"text\"\r\n//               name=\"description\"\r\n//               value={input.description}\r\n//               onChange={(e) => handleChange(e)}\r\n//               > </textarea>\r\n//             <label className={s.description}>Descripcion: </label>\r\n//             {errors.description && (\r\n//               <p className={s.danger}>{errors.description}</p>\r\n//             )}\r\n//           </div>\r\n//       </div>\r\n//       <div>\r\n//           <button type=\"submit\" className={s.btn_submit}>CREAR VIDEOJUEGO</button>\r\n//       </div>\r\n//       <div className={s.box_home}>\r\n//           <NavLink to={'/home'} className={s.back_home}>Cancelar</NavLink>\r\n//       </div>\r\n//       </form>\r\n\r\n//     </div>\r\n//   );\r\n// };\r\n// export {Create};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACnB,oBACED,OAAA;IAAAE,QAAA,eACEF,OAAA;MAAAE,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEjB,CAAC;AAEV,CAAC;AAACC,EAAA,GAPIN,MAAM;AASZ,eAAeA,MAAM;;AAarB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}