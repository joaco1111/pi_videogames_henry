{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joaco\\\\OneDrive\\\\Escritorio\\\\pi_videogames.henry\\\\pi_videogames_henry\\\\client\\\\src\\\\components\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Funcionalidades from './Funcionalidades';\nimport NavBar from \"./NavBar\";\nimport { Videogames } from './Videogames';\nimport Paginado from './Paginado';\n//import { filterByGenres, filterBySource, orderBy, getAllVideogames } from \"../redux/actions\";\nimport data from \"../\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const allGames = useSelector(state => state.allVideogames);\n  //console.log(\"allGames:\", allGames); \n\n  const [currentPage, setCurrentPage] = useState(1); //lo seteo en 1 porque siempre arranco por la primer pagina\n  const gamesPerPage = 15; //cantidad de juegos que debe haber por pagina\n  const indexOfLastGame = currentPage * gamesPerPage; // 1 * 15 = 15\n  const indexOfFirstGame = indexOfLastGame - gamesPerPage; // 15 - 15 = 0\n  const currentGames = allGames.slice(indexOfFirstGame, indexOfLastGame); //para dividir la cantidad de juegos por pagina\n\n  const dispatch = useDispatch();\n  const paginado = pageNumber => {\n    //establece el numero de pagina\n    setCurrentPage(pageNumber);\n  };\n  React.useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [currentPage]);\n  function handleSort(e) {\n    e.preventDefault();\n    if (e.target.value === '') {\n      dispatch(getAllVideogames());\n    } else {\n      dispatch(orderBy(e.target.value));\n      setCurrentPage(1);\n    }\n  }\n  function handleFilter(e) {\n    e.preventDefault();\n    if (e.target.value === '') {\n      dispatch(getAllVideogames());\n    } else {\n      dispatch(filterByGenres(e.target.value));\n      setCurrentPage(1);\n    }\n  }\n  function handleSource(e) {\n    e.preventDefault();\n    if (e.target.value === '') {\n      dispatch(getAllVideogames());\n    } else {\n      dispatch(filterBySource(e.target.value));\n      setCurrentPage(1);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Funcionalidades, {\n        handleSort: handleSort,\n        handleFilter: handleFilter,\n        handleSource: handleSource\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Videogames, {\n        currentGames: currentGames\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Paginado, {\n        gamesPerPage: gamesPerPage,\n        allGames: allGames.length,\n        paginado: paginado\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"ZMdjJSpwiCC3fEkUDvwY490JTJM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","Funcionalidades","NavBar","Videogames","Paginado","data","jsxDEV","_jsxDEV","Home","_s","allGames","state","allVideogames","currentPage","setCurrentPage","gamesPerPage","indexOfLastGame","indexOfFirstGame","currentGames","slice","dispatch","paginado","pageNumber","useEffect","window","scrollTo","handleSort","e","preventDefault","target","value","getAllVideogames","orderBy","handleFilter","filterByGenres","handleSource","filterBySource","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["C:/Users/joaco/OneDrive/Escritorio/pi_videogames.henry/pi_videogames_henry/client/src/components/Home.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Funcionalidades from './Funcionalidades'\r\nimport NavBar from \"./NavBar\";\r\nimport { Videogames } from './Videogames';\r\nimport Paginado from './Paginado';\r\n//import { filterByGenres, filterBySource, orderBy, getAllVideogames } from \"../redux/actions\";\r\nimport data from \"../\";\r\n\r\nexport default function Home () {\r\n   \r\n    const allGames = useSelector(state => state.allVideogames);\r\n    //console.log(\"allGames:\", allGames); \r\n\r\n    const [currentPage, setCurrentPage] = useState(1) //lo seteo en 1 porque siempre arranco por la primer pagina\r\n    const gamesPerPage = 15//cantidad de juegos que debe haber por pagina\r\n    const indexOfLastGame = currentPage * gamesPerPage // 1 * 15 = 15\r\n    const indexOfFirstGame= indexOfLastGame - gamesPerPage // 15 - 15 = 0\r\n    const currentGames = allGames.slice(indexOfFirstGame, indexOfLastGame) //para dividir la cantidad de juegos por pagina\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const paginado = (pageNumber) => { //establece el numero de pagina\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [currentPage])\r\n\r\n    function handleSort(e) {\r\n        e.preventDefault()\r\n        if(e.target.value === '') {\r\n            dispatch(getAllVideogames())\r\n        } else {\r\n            dispatch(orderBy(e.target.value))\r\n            setCurrentPage(1)\r\n        }\r\n    }\r\n\r\n    function handleFilter(e) {\r\n        e.preventDefault()\r\n        if(e.target.value === '') {\r\n            dispatch(getAllVideogames())\r\n        } else {\r\n            dispatch(filterByGenres(e.target.value))\r\n            setCurrentPage(1)\r\n        }\r\n    }\r\n\r\n    function handleSource(e) {\r\n        e.preventDefault()\r\n        if(e.target.value === '') {\r\n            dispatch(getAllVideogames())\r\n        } else {\r\n            dispatch(filterBySource(e.target.value))\r\n            setCurrentPage(1)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <NavBar/>\r\n            </div>\r\n            <div>\r\n                <Funcionalidades handleSort={handleSort} handleFilter={handleFilter} handleSource={handleSource}/>\r\n            </div>\r\n            <div>\r\n                <Videogames currentGames={currentGames}/>\r\n            </div>\r\n            <div>\r\n                <Paginado \r\n                gamesPerPage={gamesPerPage} \r\n                allGames={allGames.length} \r\n                paginado={paginado} />\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}